X Fix problem with WordHistoryWindow terminating after closing, losing its persistance and crashes when tries to open again.
X Refactor GameManagerViewModel and surrounding dependencies.
X Add a reset/refresh button to restart round.
X Add a start menu.
X Add constructor injection to WordFetcher.cs
x Write tests toward DataFetcherSQLite.
X Write tests for MessageBus.
x Research how to write tests toward viewmodel.
X Create a SQLite-table for images.
X Create loading of images from SQLite-database.
x Add Style / Add more style.
x Add persistance to optionswindow
X Seperate DataFetcher from DataUploader by creating a separate class for upload-operations.
Add the ability to guess letters through key-presses.
X Figure out the reason behind the high memory usage.
X Make UploadImagSetWindow close on successful upload.

Refactor:
(HangmanGameViewModel) Find other way to cache that make sense. Refactor methods "OnRoundWon/Lost, PublishResults"
(HangmanOptionsViewModel & SelectHangmanGraphicsViewModel) Figure put how to lower the memory footprint created by repeatly opening the SelectHangmanGraphicsWindow
(HangmanOptionWindow & SelectHangmanGraphicsWindow) Duplicate datatemplates, use a common source (put in /styles/).
X (HangmanDataFetcherSQLite) Use "using" keyword for handling disposing/closing objects.
X (HangmanGameViewModel) Remove _HangmanRoundManager ctor and enforce using the StartNew()-method.
x (HangmanDataFetcherSQLite) Use connectionstring through app settings instead of "magic string". Also shorten
  the connection string so it points at the current folder somewhere, instead of my local machine.

FEATURES:
Difficulty adjustment. (Affects length of words that can show up).
X Separate menu for viewing previous words/games.
x Show meaning of words.

